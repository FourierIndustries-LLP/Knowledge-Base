{
    "version": "https://jsonfeed.org/version/1",
    "title": "FourierIndustries Knowledge Base",
    "description": "",
    "home_page_url": "https://knowledge.fourier.industries",
    "feed_url": "https://knowledge.fourier.industries/feed.json",
    "user_comment": "",
    "icon": "https://knowledge.fourier.industries/media/website/logo-3.png",
    "author": {
        "name": "FourierIndustries LLP"
    },
    "items": [
        {
            "id": "https://knowledge.fourier.industries/programming-the-sstuino-ii-5.html",
            "url": "https://knowledge.fourier.industries/programming-the-sstuino-ii-5.html",
            "title": "From Blocks to Code, Part 1",
            "summary": "This tutorial aims to teach you the basics of text&hellip;",
            "content_html": "<p>This tutorial aims to teach you the basics of text coding, using the Arduino IDE. We started using the IDE to edit code frequently and will be using it to program increasingly complex projects in the future.</p>\n<h2>Basic Building Blocks</h2>\n<figure class=\"post__image\"><img loading=\"lazy\"  style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\" src=\"https://knowledge.fourier.industries/media/posts/18/SSTuinoIoT8.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/18/responsive/SSTuinoIoT8-xs.png 300w ,https://knowledge.fourier.industries/media/posts/18/responsive/SSTuinoIoT8-sm.png 480w ,https://knowledge.fourier.industries/media/posts/18/responsive/SSTuinoIoT8-md.png 749w\"  alt=\"\" width=\"897\" height=\"387\"></figure>\n<p><strong>Declaration - </strong>Used to declare the libraries and variables used in the code. For example, the variable <code>temp</code> is declared as an integer and has the starting value of 0.</p>\n<p><strong>Setup - </strong>Code that is run once to set up your SSTuino. For example, the <code>Serial.begin(9600);</code> tells it to start the serial monitor with a baud rate (speed) of 9600bps (bits per second)</p>\n<p><strong>Loop - </strong>Code that is repeated forever, when the microcontroller is powered. For example, the code inside the example tells it to output temperature data using the serial monitor every 10 milliseconds.</p>\n<p><a href=\"https://knowledge.fourier.industries/programming-the-sstuino-ii-4.html\" class=\"btn btn--outline\">⬅️ Back</a><a style=\"float: right;\" href=\"#non-existing-post-with-id-19\" class=\"btn btn--green\">Next ➡️</a></p>",
            "author": {
                "name": "FourierIndustries LLP"
            },
            "tags": [
            ],
            "date_published": "2022-03-21T20:53:01+08:00",
            "date_modified": "2022-03-21T20:53:01+08:00"
        },
        {
            "id": "https://knowledge.fourier.industries/programming-the-sstuino-ii-4.html",
            "url": "https://knowledge.fourier.industries/programming-the-sstuino-ii-4.html",
            "title": "Variables and Operators",
            "summary": "In this tutorial, we will cover the usage of variables&hellip;",
            "content_html": "<p>In this tutorial, we will cover the usage of variables and AND/OR Operators.</p>\n<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1fulqia872go\">Naming your variables</a></li>\n<li><a href=\"#mcetoc_1fulqia872gp\">Logic Operations</a>\n<ul>\n<li><a href=\"#mcetoc_1fulqia872gq\">Some history...</a></li>\n<li><a href=\"#mcetoc_1fulqia872gr\">AND Operator</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1fulqia872gs\">OR Operator</a>\n<ul>\n<li><a href=\"#mcetoc_1fulqia872gt\">Resources and Going Further</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1fulqia872gu\">OR Operator exercise</a></li>\n<li><a href=\"#mcetoc_1fulqia872gv\">AND Operator exercise</a></li>\n<li><a href=\"#mcetoc_1fulqia872h0\">Drag Race example</a></li>\n<li><a href=\"#mcetoc_1fulqia872h1\">Toggle Switch</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1fulqia872go\">Naming your variables</h2>\n<p>After some tinkering with your coding, you may realise that it may be a hassle to change for example a pin, like this example code:</p>\n<pre><code class=\"language-cpp\">\nvoid setup()\n{\n  pinMode(13, OUTPUT);\n}\n\nvoid loop()\n{\n  digitalWrite(13, HIGH);\n  delay(1000); // Wait for 1000 millisecond(s)\n  digitalWrite(13, LOW);\n  delay(1000); // Wait for 1000 millisecond(s)\n}\n</code></pre>\n<p>Imagine that you would have to change all the <code>pin 13</code> to another pin, and would have to scan through the entire code just to change all these values! Isn't it a hassle to change all these numbers?</p>\n<p><em>Introducing... Variable names. </em>😎 Here is a modified version of the code above:</p>\n<pre><code class=\"language-cpp\">\nint LED = 13;\nint wait = 1000;\n\nvoid setup()\n{\n  pinMode(LED, OUTPUT);\n}\n\nvoid loop()\n{\n  digitalWrite(LED, HIGH);\n  delay(wait); // Wait for 1000 millisecond(s)\n  digitalWrite(13, LOW);\n  delay(wait); // Wait for 1000 millisecond(s)\n}\n</code></pre>\n<p><em><strong>Voilà!</strong></em> I have managed to change all the numbers to variable names. For example, in the event I want to adjust the <code>delay()</code> function in the code, I just have to change the <code>1000</code> in the <code>int wait=1000;</code> into a different number! Now that's straightforward. <em>How about you try it out now?</em></p>\n<h2 id=\"mcetoc_1fulqia872gp\">Logic Operations</h2>\n<p>Logical operations are introduced when we need to evaluate related expressions to return a single value. For this tutorial, we are going to introduce the AND/OR Operators.</p>\n<h3 id=\"mcetoc_1fulqia872gq\">Some history...</h3>\n<p>Back when technology was not this advanced, the various operators were actual hardware logic gates that were placed into the circuit. The chips looked something like this:</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/17/arduinoButton15.jpg\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton15-xs.jpg 300w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton15-sm.jpg 480w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton15-md.jpg 749w\"  alt=\"\" width=\"390\" height=\"317\"></figure>\n<p>Technology has come a long way, squeezing billions of transistors inside a single chip to provide us with a fast, modern computer.</p>\n<h3 id=\"mcetoc_1fulqia872gr\">AND Operator</h3>\n<p>How it works is that if both Input 1 and Input 2 are <code>high</code>, it will give a <code>high</code> output, as illustrated in this table (emojis added to help you understand 😄):</p>\n<table class=\"table-bordered\" style=\"border-collapse: collapse; width: 100%; height: 251.797px;\" border=\"1\">\n<tbody>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 33.2855%; height: 50.3594px;\"><strong>Input 1</strong></td>\n<td style=\"width: 33.2855%; height: 50.3594px;\"><strong>Input 2</strong></td>\n<td style=\"width: 33.2866%; height: 50.3594px;\"><strong>Output</strong></td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 33.2855%; height: 50.3594px;\">0 😡</td>\n<td style=\"width: 33.2855%; height: 50.3594px;\">0 😡</td>\n<td style=\"width: 33.2866%; height: 50.3594px;\">0 😡</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 33.2855%; height: 50.3594px;\">0 😡</td>\n<td style=\"width: 33.2855%; height: 50.3594px;\">1 🙂</td>\n<td style=\"width: 33.2866%; height: 50.3594px;\">0 😡</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 33.2855%; height: 50.3594px;\">1 🙂</td>\n<td style=\"width: 33.2855%; height: 50.3594px;\">0 😡</td>\n<td style=\"width: 33.2866%; height: 50.3594px;\">0 😡</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 33.2855%; height: 50.3594px;\">1 🙂</td>\n<td style=\"width: 33.2855%; height: 50.3594px;\">1 🙂</td>\n<td style=\"width: 33.2866%; height: 50.3594px;\">1 🙂</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<h2 id=\"mcetoc_1fulqia872gs\">OR Operator</h2>\n<p>How it works is that if either Input 1 <strong>OR</strong> Input 2 are <code>high</code>, it will give a <code>high</code> output. If both Inputs are <code>high</code>, it will also give a <code>high</code> output, as illustrated in this table (Emojis added to help you understand 😄): </p>\n<table class=\"table-bordered\" style=\"border-collapse: collapse; width: 100%;\" border=\"1\">\n<tbody>\n<tr>\n<td style=\"width: 33.2855%;\"><strong>Input 1</strong></td>\n<td style=\"width: 33.2855%;\"><strong>Input 2</strong></td>\n<td style=\"width: 33.2866%;\"><strong>Output</strong></td>\n</tr>\n<tr>\n<td style=\"width: 33.2855%;\">0 😡</td>\n<td style=\"width: 33.2855%;\">0 😡</td>\n<td style=\"width: 33.2866%;\">0 😡</td>\n</tr>\n<tr>\n<td style=\"width: 33.2855%;\">0 😡</td>\n<td style=\"width: 33.2855%;\">1 🙂</td>\n<td style=\"width: 33.2866%;\">1 🙂</td>\n</tr>\n<tr>\n<td style=\"width: 33.2855%;\">1 🙂</td>\n<td style=\"width: 33.2855%;\">0 😡</td>\n<td style=\"width: 33.2866%;\">1 🙂</td>\n</tr>\n<tr>\n<td style=\"width: 33.2855%;\">1 🙂</td>\n<td style=\"width: 33.2855%;\">1 🙂</td>\n<td style=\"width: 33.2866%;\">1 🙂</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"mcetoc_1fulqia872gt\">Resources and Going Further</h3>\n<ul>\n<li><a href=\"https://www.electronics-tutorials.ws/category/logic\" target=\"_blank\" rel=\"noopener noreferrer\">Electronic Tutorials: Logic Gates</a></li>\n</ul>\n<h2 id=\"mcetoc_1fulqia872gu\">OR Operator exercise</h2>\n<p>Let us create a new circuit in TinkerCAD like this:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/17/arduinoButton16.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton16-xs.png 300w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton16-sm.png 480w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton16-md.png 749w\"  alt=\"\" width=\"1818\" height=\"843\"></figure>\n<p>Next, we will need to edit the code such that the LED would light up once <strong>one</strong> of the buttons is pressed:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/17/arduinoButton17.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton17-xs.png 300w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton17-sm.png 480w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton17-md.png 749w\"  alt=\"\" width=\"1897\" height=\"501\"></figure>\n<p>You would see this when you start simulation:</p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/arduinoButton34.mp4\" type=\"video/mp4\" /></video></figure>\n<p>Here is what it looks like on the SSTuino:</p>\n<p class=\"msg msg--warning\"><strong>Warning:</strong> To prevent damage to your Learning Device or your components, please <strong>do not connect the SSTuino to your LD or power supply</strong> when you are wiring up your circuit. </p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/arduinoButton38.mp4\" type=\"video/mp4\" /></video></figure>\n<h2 id=\"mcetoc_1fulqia872gv\">AND Operator exercise</h2>\n<p>With the same example, we just have to change one part of the code to this:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/17/arduinoButton21.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton21-xs.png 300w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton21-sm.png 480w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton21-md.png 749w\"  alt=\"\" width=\"2032\" height=\"536\"></figure>\n<p class=\"msg msg--info\"><strong>Tip: </strong>To activate the two buttons, you would have to press and hold <strong>SHIFT</strong> on your keyboard while clicking the buttons to activate both buttons.</p>\n<p>You would see this when you start simulation:</p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/arduinoButton35.mp4\" type=\"video/mp4\" /></video></figure>\n<p>Here is what it looks like on the SSTuino:</p>\n<p class=\"msg msg--warning\"><strong>Warning:</strong> To prevent damage to your Learning Device or your components, please <strong>do not connect the SSTuino to your LD or power supply</strong> when you are wiring up your circuit. </p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/arduinoButton39.mp4\" type=\"video/mp4\" /></video></figure>\n<h2 id=\"mcetoc_1fulqia872h0\">Drag Race example</h2>\n<p>Let us duplicate the circuit we have just created in the previous section.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/17/arduinoButton22.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton22-xs.png 300w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton22-sm.png 480w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton22-md.png 749w\"  alt=\"\" width=\"636\" height=\"374\"></figure>\n<p>We will need to have 3 LEDs this time, to show that:</p>\n<table class=\"table-bordered\" style=\"border-collapse: collapse; width: 100%; height: 251.797px;\" border=\"1\">\n<tbody>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 33.2855%; height: 50.3594px;\"><strong>Button 1</strong></td>\n<td style=\"width: 33.2855%; height: 50.3594px;\"><strong>Button 2</strong></td>\n<td style=\"width: 33.2866%; height: 50.3594px;\"><strong>Output</strong></td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 33.2855%; height: 50.3594px;\">Not Pressed</td>\n<td style=\"width: 33.2855%; height: 50.3594px;\">Not Pressed</td>\n<td style=\"width: 33.2866%; height: 50.3594px;\"><span style=\"color: #e03e2d;\">Red</span> LED</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 33.2855%; height: 50.3594px;\">Not Pressed</td>\n<td style=\"width: 33.2855%; height: 50.3594px;\">Pressed</td>\n<td style=\"width: 33.2866%; height: 50.3594px;\"><span style=\"color: #f1c40f;\">Yellow</span> LED</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 33.2855%; height: 50.3594px;\">Pressed</td>\n<td style=\"width: 33.2855%; height: 50.3594px;\">Not Pressed</td>\n<td style=\"width: 33.2866%; height: 50.3594px;\"><span style=\"color: #f1c40f;\">Yellow</span> LED</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 33.2855%; height: 50.3594px;\">Pressed</td>\n<td style=\"width: 33.2855%; height: 50.3594px;\">Pressed</td>\n<td style=\"width: 33.2866%; height: 50.3594px;\"><span style=\"color: #2dc26b;\">Green</span> LED</td>\n</tr>\n</tbody>\n</table>\n<p>The circuit is built as shown:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/17/arduinoButton23-2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton23-2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton23-2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton23-2-md.png 749w\"  alt=\"\" width=\"1915\" height=\"872\"></figure>\n<p class=\"msg msg--highlight  msg--success\">How would you program this circuit?</p>\n<p>Here is how I did it:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/17/arduinoButton24.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton24-xs.png 300w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton24-sm.png 480w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton24-md.png 749w\"  alt=\"\" width=\"1206\" height=\"812\"></figure>\n<p>Here is how the code works:</p>\n<ol>\n<li>Are any of the buttons pressed? If yes go to 2, if not, Red LED.</li>\n<li>Are both of the buttons pressed? If yes, Green LED, if not, Yellow LED.</li>\n</ol>\n<p>So would there be other ways to do it? <em>Certainly!</em> This is just one of the ways you can do it! There are many ways to make it work the same way also!</p>\n<p>For the above code, this is what happens when I press <strong>Start Simulation:</strong></p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/arduinoButton36.mp4\" type=\"video/mp4\" /></video></figure>\n<p>Here is what it looks like on the SSTuino:</p>\n<p class=\"msg msg--warning\"><strong>Warning:</strong> To prevent damage to your Learning Device or your components, please <strong>do not connect the SSTuino to your LD or power supply</strong> when you are wiring up your circuit. </p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/arduinoButton40.mp4\" type=\"video/mp4\" /></video></figure>\n<h2 id=\"mcetoc_1fulqia872h1\">Toggle Switch</h2>\n<p>Let us assume that we only have a button to control our lighting. Based on previous examples, if you were want to light up the LED, you would have to press and hold the LED right? What if I was to use the washroom and want the lights to be on? I would then have to press and hold the button for the lights to remain on! 😱 To make our lives much better, we can make our button into a toggle switch with some coding... 🥳</p>\n<p>Build a circuit as shown:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/17/arduinoButton4.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton4-xs.png 300w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton4-sm.png 480w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton4-md.png 749w\"  alt=\"\" width=\"1929\" height=\"853\"></figure>\n<p>For the program, we would have to introduce variables. To create variables, navigate here:</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/17/arduinoButton27.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton27-xs.png 300w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton27-sm.png 480w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton27-md.png 749w\"  alt=\"\" width=\"260\" height=\"230\"></figure>\n<p>Create the variables <code>btn</code> and <code>led</code>. We are going to use these variables to store the state of the button and LED. What this means is that if the button is pressed, I change the state of the variable, and it will remember the state. This also means that if I press and hold the button, it does not spam the ON command. It will just activate once. Same with the LED.</p>\n<p>Here is how the program can be coded:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/17/arduinoButton28.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton28-xs.png 300w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton28-sm.png 480w ,https://knowledge.fourier.industries/media/posts/17/responsive/arduinoButton28-md.png 749w\"  alt=\"\" width=\"1152\" height=\"1014\"></figure>\n<p class=\"msg msg--success\">You can explore other ways of programming this too!</p>\n<p>Did you manage to do it? If you did, that's great! Do help your peers out too!</p>\n<p>You would see this when you start simulation:</p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/arduinoButton37.mp4\" type=\"video/mp4\" /></video></figure>\n<p>Here is what it looks like on the SSTuino:</p>\n<p class=\"msg msg--warning\"><strong>Warning:</strong> To prevent damage to your Learning Device or your components, please <strong>do not connect the SSTuino to your LD or power supply</strong> when you are wiring up your circuit. </p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/arduinoButton41.mp4\" type=\"video/mp4\" /></video></figure>\n<p class=\"msg msg--success\">Let's share your work! Record and post a video onto Instagram with the hashtag <em><strong>#sstuino</strong></em>!</p>\n<p><a href=\"https://knowledge.fourier.industries/programming-the-sstuino-ii-2.html\" class=\"btn btn--outline\">⬅️ Back</a><a style=\"float: right;\" href=\"https://knowledge.fourier.industries/programming-the-sstuino-ii-5.html\" class=\"btn btn--green\">Next ➡️</a></p>",
            "author": {
                "name": "FourierIndustries LLP"
            },
            "tags": [
            ],
            "date_published": "2022-03-21T16:41:50+08:00",
            "date_modified": "2022-03-23T14:43:15+08:00"
        },
        {
            "id": "https://knowledge.fourier.industries/programming-the-sstuino-ii-2.html",
            "url": "https://knowledge.fourier.industries/programming-the-sstuino-ii-2.html",
            "title": "Pull-up resistors and If/Else Statements",
            "summary": "In this tutorial, we will learn about pull up resistors,&hellip;",
            "content_html": "<p>In this tutorial, we will learn about pull up resistors, and use push buttons to control lighting.</p>\n<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1fulqiifr2he\">Pull-up resistors</a>\n<ul>\n<li><a href=\"#mcetoc_1fulqiifr2hf\">Resources and Going Further</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1fulqiifr2hg\">Buttons and If/Else Statement</a></li>\n<li><a href=\"#mcetoc_1fulqiifr2hh\">Control your lights</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1fulqiifr2he\">Pull-up resistors</h2>\n<p>Pull-up resistors are found in digital logic devices and microcontrollers. When a pin in say, the SSTuino is connected as an input and tries to read the state of the pin, it is very difficult to determine whether the pin is actually high or low, due to a lot of factors such as noise in the circuit. This effect is referred to as floating.<br><br>To eliminate this, we will place a pull-up resistor to ensure that the pin is either in its <code>HIGH</code> or <code>LOW</code> state, while using a little bit of current. Pull-up resistors are usually used on buttons and switches where there is a possibility of signal noise.</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://cdn.sparkfun.com/assets/6/f/b/c/7/511568b6ce395f1b40000000.jpg\" data-is-external-image=\"true\"  alt=\"\" width=\"315\" height=\"231\"></figure>\n<h3 id=\"mcetoc_1fulqiifr2hf\">Resources and Going Further</h3>\n<ul>\n<li><a href=\"https://learn.sparkfun.com/tutorials/pull-up-resistors/all\" target=\"_blank\" rel=\"noopener noreferrer\">Sparkfun: Pull up resistors</a></li>\n<li><a href=\"https://learn.adafruit.com/circuit-playground-digital-input/floating-inputs\" target=\"_blank\" rel=\"noopener noreferrer\">Adafruit: Floating pins</a></li>\n<li><a href=\"https://www.mouser.com/blog/dont-leave-your-pins-floating\" target=\"_blank\" rel=\"noopener noreferrer\">Mouser: Don't leave your pins floating</a></li>\n</ul>\n<h2 id=\"mcetoc_1fulqiifr2hg\">Buttons and If/Else Statement</h2>\n<p>We are going to read very simple data from a push button, to know whether it has been pressed or not. Set up your circuit as shown:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/15/arduinoButton1-2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/15/responsive/arduinoButton1-2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/15/responsive/arduinoButton1-2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/15/responsive/arduinoButton1-2-md.png 749w\"  alt=\"\" width=\"1809\" height=\"789\"></figure>\n<p>Next, go to the coding section and then program it like this:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/15/arduinoButton2-2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/15/responsive/arduinoButton2-2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/15/responsive/arduinoButton2-2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/15/responsive/arduinoButton2-2-md.png 749w\"  alt=\"\" width=\"639\" height=\"329\"></figure>\n<p>What this code does is that the Arduino would wait for the button to be pressed. <strong>If</strong> the button is not pressed, it would output \"Not pressed!\" in the serial monitor. <strong>Else</strong>, it would output \"pressed!\" in the serial monitor. This is how a simple If/Else statement works!</p>\n<p>Now start the simulation and then press the serial monitor:</p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/arduinoButton3.mp4\" type=\"video/mp4\" /></video></figure>\n<p>Let's copy this circuit to your SSTuino! </p>\n<p class=\"msg msg--warning\"><strong>Warning:</strong> To prevent damage to your Learning Device or your components, please <strong>do not connect the SSTuino to your LD or power supply</strong> when you are wiring up your circuit. </p>\n<p>After the code has been uploaded to the SSTuino, let's head to the serial monitor of the Arduino IDE:</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-translation=\"Add images\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://knowledge.fourier.industries/media/posts/15/gallery/arduinoButton29.png\" data-size=\"1002x494\"><img loading=\"lazy\" src=\"https://knowledge.fourier.industries/media/posts/15/gallery/arduinoButton29-thumbnail.png\" alt=\"\" width=\"749\" height=\"369\"></a>\n<figcaption>You can click on the top right hand corner of the Arduino IDE,</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://knowledge.fourier.industries/media/posts/15/gallery/arduinoButton30.png\" data-size=\"1168x756\"><img loading=\"lazy\" src=\"https://knowledge.fourier.industries/media/posts/15/gallery/arduinoButton30-thumbnail.png\" alt=\"\" width=\"749\" height=\"485\"></a>\n<figcaption>or go to Tools &gt; Serial Monitor.</figcaption>\n</figure>\n</div></div>\n<p>Here is how the circuit looks like:</p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/arduinoButton32.mp4\" type=\"video/mp4\" /></video></figure>\n<h2 id=\"mcetoc_1fulqiifr2hh\">Control your lights</h2>\n<p><em>This time with coding! </em>😁 With the data we have read from the push button, we can use it to trigger a reaction. Set up your circuit in TinkerCAD as shown:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/15/arduinoButton4-2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/15/responsive/arduinoButton4-2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/15/responsive/arduinoButton4-2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/15/responsive/arduinoButton4-2-md.png 749w\"  alt=\"\" width=\"1929\" height=\"853\"></figure>\n<p>Next, we will need to edit the code such that the LED will light up when the button is pressed:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/15/arduinoButton5.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/15/responsive/arduinoButton5-xs.png 300w ,https://knowledge.fourier.industries/media/posts/15/responsive/arduinoButton5-sm.png 480w ,https://knowledge.fourier.industries/media/posts/15/responsive/arduinoButton5-md.png 749w\"  alt=\"\" width=\"1064\" height=\"680\"></figure>\n<p>The block code is similar to the previous exercise, but with LEDs added this time. This will happen after you start simulation:</p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/arduinoButton31.mp4\" type=\"video/mp4\" /></video></figure>\n<p>Let's copy this circuit over to your SSTuino! This is how it should look like:</p>\n<p class=\"msg msg--warning\"><strong>Warning:</strong> To prevent damage to your Learning Device or your components, please <strong>do not connect the SSTuino to your LD or power supply</strong> when you are wiring up your circuit. </p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/arduinoButton33.mp4\" type=\"video/mp4\" /></video></figure>\n<p class=\"msg msg--success\">Let's share your work! Record and post a video onto Instagram with the hashtag <em><strong>#sstuino</strong></em>!</p>\n<p><a href=\"https://knowledge.fourier.industries/programming-the-sstuino-ii.html\" class=\"btn btn--outline\">⬅️ Back</a><a style=\"float: right;\" href=\"https://knowledge.fourier.industries/programming-the-sstuino-ii-4.html\" class=\"btn btn--green\">Next ➡️</a></p>",
            "author": {
                "name": "FourierIndustries LLP"
            },
            "tags": [
            ],
            "date_published": "2022-03-20T11:28:46+08:00",
            "date_modified": "2022-03-22T15:52:18+08:00"
        },
        {
            "id": "https://knowledge.fourier.industries/programming-the-sstuino-ii.html",
            "url": "https://knowledge.fourier.industries/programming-the-sstuino-ii.html",
            "title": "Programming the SSTuino II",
            "summary": "In this tutorial, we will discuss the programming language that&hellip;",
            "content_html": "<p>In this tutorial, we will discuss the programming language that the SSTuino II uses, and explore some examples.</p>\n<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1fuihi7fh13k\">Virtual Programming</a></li>\n<li><a href=\"#mcetoc_1fuihi7fh13l\">Pin 13</a></li>\n<li><a href=\"#mcetoc_1fuihi7fh13m\">Transfer program from TinkerCAD to Arduino IDE</a>\n<ul>\n<li><a href=\"#mcetoc_1fuihi7fh13n\">Additional Information</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1fuihi7fh13o\">Uploading code from Arduino IDE to SSTuino II</a></li>\n<li><a href=\"#mcetoc_1fuihi7fh13p\">Built-in LED</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1fuihi7fh13k\">Virtual Programming</h2>\n<p>Before we go into programming with the Arduino IDE, let us take things slow with the coding functionality on TinkerCAD!</p>\n<p>The Arduino programming language is very similar to the <a href=\"https://en.wikipedia.org/wiki/C%2B%2B\" target=\"_blank\" rel=\"noopener noreferrer\">C/C++ Language</a> and are actually C/C++ functions that can be called into your code. When the code is uploaded onto the SSTuino, the compiler inside the Arduino IDE will convert it to something that the microcontroller can read. For documentation regarding the Arduino IDE, please visit <a href=\"https://docs.arduino.cc/software/ide-v1/tutorials/arduino-ide-v1-basics\" target=\"_blank\" rel=\"noopener noreferrer\">this website.</a></p>\n<p>Create a new circuit on TinkerCAD, and set it up like this:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/14/arduinoProg1-2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg1-2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg1-2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg1-2-md.png 749w\"  alt=\"\" width=\"1836\" height=\"679\"></figure>\n<p>Once you set it up and press start simulation, notice the LED on the Arduino blinking? Why does this happen?</p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n<source src=\"media/files/arduinoProg2.mp4\" type=\"video/mp4\" /></video></figure>\n<p>The reason this happens is that TinkerCAD automatically inserts a sample code when you add the Arduino into the circuit. Stop the simulation and press the <strong>Code</strong> button. You should see something like this:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/14/arduinoProg3-2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg3-2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg3-2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg3-2-md.png 749w\"  alt=\"\" width=\"2880\" height=\"1362\"></figure>\n<p>TinkerCAD is very simple to use as you can use block coding to program the Arduino, and might be familiar if you have done block coding before with environments like Scratch or MIT App Inventor.</p>\n<p>If you would like to program with text in TinkerCAD, you can also do so like this:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/14/arduinoProg10-2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg10-2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg10-2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg10-2-md.png 749w\"  alt=\"\" width=\"910\" height=\"379\"></figure>\n<p>They also have another format called Blocks + Code. The text code changes according to the blocks that you place.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/14/arduinoProg11-2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg11-2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg11-2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg11-2-md.png 749w\"  alt=\"\" width=\"1662\" height=\"822\"></figure>\n<p class=\"msg msg--info\"><strong>Tip:</strong> TinkerCAD will delete your blocks if you switch over to text-based programming and vice versa (i.e. your text programming will be deleted if you switch back to block based programming). <img loading=\"lazy\" style=\"display: block; margin-left: auto; margin-right: auto; width: 50%;\" src=\"https://knowledge.fourier.industries/media/posts/14/arduinoProg12.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg12-xs.png 300w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg12-sm.png 480w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg12-md.png 749w\"  alt=\"\"></p>\n<p>So what does this block of code do? It tells the Arduino to:</p>\n<ul>\n<li>Turn <strong>on</strong> the built-in LED for 1 second,</li>\n<li>Turn <strong>off</strong> the built-in LED for 1 second</li>\n</ul>\n<p>and it repeats all over until you turn off the circuit by unplugging the Arduino from the power source. In Arduino programming, <strong>HIGH</strong> means to turn something on or give it power, while <strong>LOW</strong> means to turn something off or to not give it power. For this code, there are only 2 states, <strong>HIGH or LOW.</strong> This means that it is either on or off and there is no value in between (either 1 or 0).<br><br>Now change the value of the <a href=\"#\" class=\"btn btn--yellow\">wait ___ seconds</a> to something that you like. What happens then?</p>\n<h2 id=\"mcetoc_1fuihi7fh13l\">Pin 13</h2>\n<p>Now, let us connect up this circuit:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/14/arduinoProg4-2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg4-2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg4-2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg4-2-md.png 749w\"  alt=\"\" width=\"1919\" height=\"955\"></figure>\n<p>After you start the simulation, it should look something like this:</p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/arduinoProg5.mp4\" type=\"video/mp4\" /></video></figure>\n<p><em>Wait a minute...</em> How come the LED attached turns on and off even though I did not program it? Well, the reason behind it is that the built in LED on the Arduino board is also connected to pin 13. This means in the program, <code>LED_BUILTIN</code> is also pin 13.</p>\n<p class=\"msg msg--info\">For the Arduino Uno in TinkerCAD, the <code>LED_BUILTIN</code> LED pin is the same as pin 13. On the SSTuino II, the <code>LED_BUILTIN</code> LED pin and pin 13 is separate. The SSTuino II has more pins available compared to the Arduino Uno, so we assigned these 2 pins separate from each other. This means that pin 13 does not affect the <code>LED_BUILTIN</code> LED!</p>\n<h2 id=\"mcetoc_1fuihi7fh13m\">Transfer program from TinkerCAD to Arduino IDE</h2>\n<p>In TinkerCAD, another awesome feature is the ability to download the program that you have coded just now! Go to code, and press the download button:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/14/arduinoProg6.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg6-xs.png 300w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg6-sm.png 480w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg6-md.png 749w\"  alt=\"\" width=\"2880\" height=\"1360\"></figure>\n<p>A <code>.ino</code> file will be downloaded on your LD and can be used on the Arduino IDE. Open the file and you would see a pop-up message. Click on ok. A folder will be generated and you will see the code appear in the Arduino IDE.</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/14/arduinoProg7.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg7-xs.png 300w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg7-sm.png 480w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg7-md.png 749w\"  alt=\"\" width=\"376\" height=\"129\"></figure>\n<p>The Arduino app that you are using right now is called an <strong>Integrated Development Environment</strong> or <strong>IDE</strong>. It is one of the programs that you can program your SSTuino II in. Let us analyse the code we see here: </p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/14/arduinoProg8.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg8-xs.png 300w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg8-sm.png 480w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg8-md.png 749w\"  alt=\"\" width=\"306\" height=\"368\"></figure>\n<p>Here is an explanation of how most basic Arduino code works:</p>\n<pre><code class=\"language-cpp\">\n// These two slashes indicate a comment\n/* This also indicates a comment \nThe brackets () indicate a function e.g. int main()\n*/\nvoid setup() //This is only run once when the device first powers up.\n{ //&lt;- The curly brackets are very important. Place them carefully to avoid confusion.\n    pinMode(13, OUTPUT); \n    /*\n    Why is pinMode written as so? That is due to the practice of using camelCase for writing code.\n    We declare pin 13 as the output pin. It can also be written as pinMode(LED_BUILTIN, OUTPUT).\n    The state \"OUTPUT\" must be written in CAPITAL LETTERS.\n    \n    It is also very important to place a semicolon \";\" when you finish your \"sentence\", just like\n    how you write sentences in your essays.\n    */\n    \n}\n\nvoid loop() //loop = runs forever till the end of time (or until you turn off the power)\n{\n  digitalWrite(13, HIGH);// Turn on pin 13\n  delay(1000); // Wait for 1000 millisecond(s)\n  digitalWrite(13, LOW);// Turn off pin 13\n  delay(1000); // Wait for 1000 millisecond(s)\n\n  /* \n  The section above will turn on and off the LED. Note the CAPITAL LETTERS on the \"HIGH\" and \"LOW\"\n  */\n}\n</code></pre>\n<h3 id=\"mcetoc_1fuihi7fh13n\">Resources and Going Further</h3>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Camel_case\">Wikipedia Article: camelCase</a></li>\n<li><a href=\"https://www.arduino.cc/reference/en/\">Official Arduino Language Reference</a></li>\n<li><a href=\"https://www.codecademy.com/learn/learn-c-plus-plus\">Codecademy Course: C++</a></li>\n</ul>\n<h2 id=\"mcetoc_1fuihi7fh13o\">Uploading code from Arduino IDE to SSTuino II</h2>\n<p>Let us connect our SSTuino like this:</p>\n<p class=\"msg msg--warning\"><strong>Warning:</strong> To prevent damage to your Learning Device or your components, please <strong>do not connect the SSTuino to your LD or power supply</strong> when you are wiring up your circuit. </p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/14/sstuinoiiDigital.jpeg\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/14/responsive/sstuinoiiDigital-xs.jpeg 300w ,https://knowledge.fourier.industries/media/posts/14/responsive/sstuinoiiDigital-sm.jpeg 480w ,https://knowledge.fourier.industries/media/posts/14/responsive/sstuinoiiDigital-md.jpeg 749w\"  alt=\"\" width=\"1008\" height=\"756\"></figure>\n<p>In your Arduino IDE, we will need to configure it to upload code to the SSTuino II.</p>\n<ul>\n<li>Plug in the SSTuino II into your LD</li>\n<li>Select the SSTuino II from\n<ul>\n<li><strong>Tools &gt; Board &gt; SSTuino II &gt; SSTuino II Rev A</strong></li>\n</ul>\n</li>\n</ul>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/14/arduinoProg14.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg14-xs.png 300w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg14-sm.png 480w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg14-md.png 749w\"  alt=\"\" width=\"514\" height=\"251\"></figure>\n<ul>\n<li>Select the correct port:</li>\n</ul>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/14/arduinoProg15.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg15-xs.png 300w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg15-sm.png 480w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg15-md.png 749w\"  alt=\"\" width=\"534\" height=\"268\"></figure>\n<ul>\n<li>Upload your code with this button</li>\n</ul>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/14/arduinoProg13.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg13-xs.png 300w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg13-sm.png 480w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg13-md.png 749w\"  alt=\"\" width=\"306\" height=\"369\"></figure>\n<p>You should see your circuit light up like this:</p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n<source src=\"media/files/sstuinoiiDigital1.mp4\" type=\"video/mp4\" /></video></figure>\n<p>With this example, we can see that the built-in LED for the SSTuino II is different from the Arduino Uno in TinkerCAD.</p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n<source src=\"media/files/sstuinoiiDigital4.mp4\" type=\"video/mp4\" /></video></figure>\n<p>The explorer board has a cool feature to help to see if you have connection issues in your circuit!</p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n<source src=\"media/files/sstuinoiiDigital2.mp4\" type=\"video/mp4\" /></video></figure>\n<p>For this particular example, if I connect the LED incorrectly (e.g. wrong LED polarity), you will notice that the LED on the Explorer Board lights up, but not the LED on the breadboard. I can use this information to diagnose what went wrong with the circuit, instead of wondering if I made a mistake on the circuit or in the programming instead.</p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n<source src=\"media/files/sstuinoiiDigital3.mp4\" type=\"video/mp4\" /></video></figure>\n<p>This is a neat feature that we hope you would enjoy. 🙂</p>\n<h2 id=\"mcetoc_1fuihi7fh13p\">Built-in LED</h2>\n<p>If you would like to use the built-in LED on the SSTuino II, you can always do so. Here is a basic example on the Arduino IDE to get you started. Go to:</p>\n<p><strong> File &gt; Examples &gt; 01. Basic &gt; Blink</strong></p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/14/arduinoProg16.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg16-xs.png 300w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg16-sm.png 480w ,https://knowledge.fourier.industries/media/posts/14/responsive/arduinoProg16-md.png 749w\"  alt=\"\" width=\"401\" height=\"173\"></figure>\n<p>Plug in your SSTuino II and upload the code. You should see this on the SSTuino II. The Built-in LED on the SSTuino II lights up but not the LED at Pin 13.</p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n<source src=\"media/files/sstuinoiiDigital5.mp4\" type=\"video/mp4\" /></video></figure>\n<p class=\"msg msg--info\">Please note that the <code>built-in</code> LED and Pin 13 on the SSTuino II are different pins. 🙂</p>\n<p><a href=\"https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-6.html\" class=\"btn btn--outline\">⬅️ Back</a><a style=\"float: right;\" href=\"https://knowledge.fourier.industries/programming-the-sstuino-ii-2.html\" class=\"btn btn--green\">Next ➡️</a></p>",
            "author": {
                "name": "FourierIndustries LLP"
            },
            "tags": [
            ],
            "date_published": "2022-03-19T13:48:41+08:00",
            "date_modified": "2022-03-24T12:29:19+08:00"
        },
        {
            "id": "https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-6.html",
            "url": "https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-6.html",
            "title": "Building a circuit on SSTuino",
            "summary": "So you have built yourself some very simple circuits. Now&hellip;",
            "content_html": "<p>So you have built yourself some very simple circuits. Now let us build circuits, but with the SSTuino!</p>\n<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1fuihis4c140\">Adding a button</a></li>\n<li><a href=\"#mcetoc_1fuihis4c141\">Photoresistor</a></li>\n</ul>\n</div>\n<p>In TinkerCAD, create a new circuit. In this new circuit, drag out an Arduino Uno, a breadboard, one resistor and a LED. Connect it in this manner, with the <span style=\"color: #e03e2d;\"><strong>Positive(+)</strong></span> connect to <span style=\"color: #e03e2d;\"><strong>5V</strong></span> and the <strong>Negative(-)</strong> connect to <strong>GND</strong>.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/13/arduino1-3.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/13/responsive/arduino1-3-xs.png 300w ,https://knowledge.fourier.industries/media/posts/13/responsive/arduino1-3-sm.png 480w ,https://knowledge.fourier.industries/media/posts/13/responsive/arduino1-3-md.png 749w\"  alt=\"\" width=\"2160\" height=\"985\"></figure>\n<p>Press <strong>Start Simulation</strong> and see your circuit light up!</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/13/arduino2-2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/13/responsive/arduino2-2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/13/responsive/arduino2-2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/13/responsive/arduino2-2-md.png 749w\"  alt=\"\" width=\"2117\" height=\"1004\"></figure>\n<p>Now, copy your circuit from TinkerCAD onto your SSTuino.</p>\n<p class=\"msg msg--warning\"><strong>Warning:</strong> To prevent damage to your Learning Device or your components, please <strong>do not connect the SSTuino to your LD or power supply</strong> when you are wiring up your circuit. </p>\n<p>It should look something like this:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/13/sstuinoii1.jpg\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/13/responsive/sstuinoii1-xs.jpg 300w ,https://knowledge.fourier.industries/media/posts/13/responsive/sstuinoii1-sm.jpg 480w ,https://knowledge.fourier.industries/media/posts/13/responsive/sstuinoii1-md.jpg 749w\"  alt=\"\" width=\"3790\" height=\"2621\"></figure>\n<p>Let us go back to the simulation and change the circuit like this:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/13/arduino7-2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/13/responsive/arduino7-2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/13/responsive/arduino7-2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/13/responsive/arduino7-2-md.png 749w\"  alt=\"\" width=\"1947\" height=\"981\"></figure>\n<p>What would happen and why?</p>\n<p class=\"msg msg--info\"><strong>Tip: </strong>Remember, it is important to add a resistor in your circuit to prevent too much current flowing through your components.</p>\n<h2 id=\"mcetoc_1fuihis4c140\">Adding a button</h2>\n<p>Let us add a button to control the circuit! Set up your circuit like this:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/13/arduino4-2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/13/responsive/arduino4-2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/13/responsive/arduino4-2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/13/responsive/arduino4-2-md.png 749w\"  alt=\"\" width=\"2199\" height=\"1005\"></figure>\n<p>What this circuit allows you to do is to turn on and off your LED. This push button works something like this: When you press the button, the circuit is closed and current can flow to the LED, which makes the LED light up. When the button is not pressed, the circuit is considered open and current will not flow to the LED, which makes the LED not light up.</p>\n<p>Copy this circuit over to your SSTuino board setup. This is how it looks: </p>\n<p class=\"msg msg--warning\"><strong>Warning: </strong>To prevent damage to your Learning Device or your components, please <strong>do not connect the SSTuino to your LD or power supply</strong> when you are wiring up your circuit. </p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"492\" height=\"246\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/sstuinoii2.mp4\" type=\"video/mp4\" /></video></figure>\n<p>You can consider adding more LEDs to the circuit. How would you add the LEDs to the circuit? What kind of reaction does your circuit have?</p>\n<h2 id=\"mcetoc_1fuihis4c141\">Photoresistor</h2>\n<p>The photoresistor is a resistor that reacts to light. It changes resistance when the amount of light it detects changes. Create a new circuit and set up your circuit like this:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/13/arduino5-2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/13/responsive/arduino5-2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/13/responsive/arduino5-2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/13/responsive/arduino5-2-md.png 749w\"  alt=\"\" width=\"1797\" height=\"906\"></figure>\n<p>What this circuit allows you to see is the difference in LED brightness as you cover the photoresistor or shine a torch on it.</p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"492\" height=\"246\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/arduino6.mp4\" type=\"video/mp4\" /></video></figure>\n<p>Copy this circuit over to your SSTuino board setup.</p>\n<p class=\"msg msg--warning\"><strong>Warning:</strong> To prevent damage to your Learning Device or your components, please <strong>do not connect the SSTuino to your LD or power supply</strong> when you are wiring up your circuit. </p>\n<p>What happens to the LED brightness as you play with the photoresistor?</p>\n<p class=\"msg msg--success\">Let's share your work! Record and post a video onto Instagram with the hashtag <em><strong>#sstuino</strong></em>!</p>\n<p><a href=\"https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-5.html\" class=\"btn btn--outline\">⬅️ Back</a><a style=\"float: right;\" href=\"https://knowledge.fourier.industries/programming-the-sstuino-ii.html\" class=\"btn btn--green\">Next ➡️</a></p>",
            "author": {
                "name": "FourierIndustries LLP"
            },
            "tags": [
            ],
            "date_published": "2022-03-19T11:49:37+08:00",
            "date_modified": "2022-03-21T13:28:40+08:00"
        },
        {
            "id": "https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-5.html",
            "url": "https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-5.html",
            "title": "TinkerCAD Introduction",
            "summary": "Let us create our first virtual circuit! Circuit Simulation is&hellip;",
            "content_html": "<p>Let us create our first virtual circuit! Circuit Simulation is a great tool to test out your circuit design before assembling it in real life. This helps to reduce the possibility of your components being spoilt due to an incorrect circuit design. </p>\n<p class=\"msg msg--warning\"><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">As we will be progressing towards tinkering and creating a circuit, please do not connect the circuit/project to power before completing it. This helps to lower the risk of a component failure due to an improperly constructed circuit. 🙂</span></p>\n<p>For our virtual circuits, we will be using TinkerCAD! It is one of the most popular classroom tools for creating simple designs from scratch. It is also a simple to use online 3D design and prototyping program.</p>\n<p>Let us set up TinkerCAD and have fun with a mini project!</p>\n<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1fug4oiglbn\">Sign in to TinkerCAD</a></li>\n<li><a href=\"#mcetoc_1fug4oiglbo\">Create a Circuit</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1fug4oiglbn\">Sign in to TinkerCAD</h2>\n<p>Signing in to TinkerCAD is very simple! Simply head over to the website:</p>\n<p class=\"align-center\"><a href=\"https://www.tinkercad.com\" class=\"btn\" target=\"_blank\" rel=\"noopener noreferrer\">Visit TinkerCAD here</a></p>\n<p>Click on <strong>Join Now</strong></p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/12/Screenshot-2022-03-19-at-11.09.42-AM.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/12/responsive/Screenshot-2022-03-19-at-11.09.42-AM-xs.png 300w ,https://knowledge.fourier.industries/media/posts/12/responsive/Screenshot-2022-03-19-at-11.09.42-AM-sm.png 480w ,https://knowledge.fourier.industries/media/posts/12/responsive/Screenshot-2022-03-19-at-11.09.42-AM-md.png 749w\"  alt=\"\" width=\"2880\" height=\"1638\"></figure>\n<p>Click on <strong>Create a personal account</strong>, and <strong>Sign in with Google</strong>. Proceed to sign up with your SST Gmail account.</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-translation=\"Add images\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://knowledge.fourier.industries/media/posts/12/gallery/Screenshot-2022-03-19-at-11.12.27-AM-2.png\" data-size=\"726x1058\"><img loading=\"lazy\" src=\"https://knowledge.fourier.industries/media/posts/12/gallery/Screenshot-2022-03-19-at-11.12.27-AM-2-thumbnail.png\" alt=\"\" width=\"726\" height=\"1058\"></a>\n<figcaption>Click on \"create a personal account\"</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://knowledge.fourier.industries/media/posts/12/gallery/Screenshot-2022-03-19-at-11.16.25-AM.png\" data-size=\"720x1054\"><img loading=\"lazy\" src=\"https://knowledge.fourier.industries/media/posts/12/gallery/Screenshot-2022-03-19-at-11.16.25-AM-thumbnail.png\" alt=\"\" width=\"720\" height=\"1054\"></a>\n<figcaption>Click on Sign in with Google</figcaption>\n</figure>\n</div></div>\n<h2 id=\"mcetoc_1fug4oiglbo\">Create a Circuit</h2>\n<p>There are a lot of functions inside TinkerCAD! However, for the purposes of the SSTuino, we are going to use the \"Circuits\" function. Click on \"Circuits\" on the sidebar and click on \"Create new Circuit\".</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/12/createCircuit.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/12/responsive/createCircuit-xs.png 300w ,https://knowledge.fourier.industries/media/posts/12/responsive/createCircuit-sm.png 480w ,https://knowledge.fourier.industries/media/posts/12/responsive/createCircuit-md.png 749w\"  alt=\"\" width=\"2880\" height=\"1364\"></figure>\n<p class=\"msg msg--highlight  msg--info\">It is a very good habit to create a new circuit after you have finished your previous tutorial, instead of overwriting the current circuit. That way, you would be able to refer to previous tutorials done when you need help with your future projects.</p>\n<p>After you have created the new circuit, it should look like this. We have also included a legend on the interface of the TinkerCAD Circuits function.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/12/tinkercadLegend2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/12/responsive/tinkercadLegend2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/12/responsive/tinkercadLegend2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/12/responsive/tinkercadLegend2-md.png 749w\"  alt=\"\" width=\"1636\" height=\"411\"></figure>\n<p>Let us bring out a 9V battery then connect it as follows. After you have connected the circuit, click on <strong>Start Simulation</strong> on the top right-hand corner of the website. You will notice that the LED immediately \"explodes\". 🤭</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-translation=\"Add images\" data-columns=\"1\">\n<figure class=\"gallery__item\"><a href=\"https://knowledge.fourier.industries/media/posts/12/gallery/9V_Test.png\" data-size=\"1786x636\"><img loading=\"lazy\" src=\"https://knowledge.fourier.industries/media/posts/12/gallery/9V_Test-thumbnail.png\" alt=\"\" width=\"749\" height=\"267\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://knowledge.fourier.industries/media/posts/12/gallery/9V_Test2.png\" data-size=\"1738x544\"><img loading=\"lazy\" src=\"https://knowledge.fourier.industries/media/posts/12/gallery/9V_Test2-thumbnail.png\" alt=\"\" width=\"749\" height=\"234\"></a></figure>\n</div></div>\n<p>The LED burns as there is no resistor used to limit the flow of the current. Instead, connect a resistor like this. With the resistor attached, the LED lights up without burning up. 🙂 Try this with different resistor values. What kind of changes would happen here?</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/12/9V_Test3-2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/12/responsive/9V_Test3-2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/12/responsive/9V_Test3-2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/12/responsive/9V_Test3-2-md.png 749w\"  alt=\"\" width=\"1434\" height=\"625\"></figure>\n<p>Now, let us try this out using different types of batteries. TinkerCAD mainly provides 3 types of batteries: 9V, 3V and 1.5V. Connect your circuit up as shown. The next picture illustrates when you start the simulation:</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-translation=\"Add images\" data-columns=\"2\">\n<figure class=\"gallery__item\"><a href=\"https://knowledge.fourier.industries/media/posts/12/gallery/9V_Test5-2.png\" data-size=\"1375x934\"><img loading=\"lazy\" src=\"https://knowledge.fourier.industries/media/posts/12/gallery/9V_Test5-2-thumbnail.png\" alt=\"\" width=\"749\" height=\"509\"></a>\n<figcaption>Connect up your circuit as shown</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://knowledge.fourier.industries/media/posts/12/gallery/9V_Test4-2.png\" data-size=\"1414x964\"><img loading=\"lazy\" src=\"https://knowledge.fourier.industries/media/posts/12/gallery/9V_Test4-2-thumbnail.png\" alt=\"\" width=\"749\" height=\"511\"></a>\n<figcaption>This is what happens after you start simulation</figcaption>\n</figure>\n</div></div>\n<p>Why would this happen? This is because LEDs have a minimum voltage to light up. If you look at the spec sheet located here:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/12/ledSpec.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/12/responsive/ledSpec-xs.png 300w ,https://knowledge.fourier.industries/media/posts/12/responsive/ledSpec-sm.png 480w ,https://knowledge.fourier.industries/media/posts/12/responsive/ledSpec-md.png 749w\"  alt=\"\" width=\"2408\" height=\"638\"></figure>\n<p>The 1.5V battery would be barely able to light up the circuit, and only the 2 other battery types will be able to light up the LED.</p>\n<p><a href=\"https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-4.html\" class=\"btn btn--outline\">⬅️ Back</a><a style=\"float: right;\" href=\"https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-6.html\" class=\"btn btn--green\">Next ➡️</a></p>",
            "author": {
                "name": "FourierIndustries LLP"
            },
            "tags": [
            ],
            "date_published": "2022-03-19T11:08:16+08:00",
            "date_modified": "2022-03-24T12:22:40+08:00"
        },
        {
            "id": "https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-4.html",
            "url": "https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-4.html",
            "title": "Essential Theory",
            "summary": "In this tutorial, we will learn the basics of electronic&hellip;",
            "content_html": "<p>In this tutorial, we will learn the basics of electronic circuits, Ohm's Law, and a guide to the components provided in the SSTuino Innovator's Kit v2.</p>\n<p class=\"msg msg--warning\"><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">As we will be progressing towards tinkering and creating a circuit, please do not connect the circuit/project to power before completing it. This helps to lower the risk of a component failure due to an improperly constructed circuit. 🙂</span></p>\n<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1fuihjt2m14c\">How do circuits work?</a></li>\n<li><a href=\"#mcetoc_1fuihjt2m14d\">Ohm's Law</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1fuihjt2m14c\">How do circuits work?</h2>\n<div>\n<p>A basic electrical circuit has 3 items:</p>\n<ol>\n<li>Power Source (Battery, Wall Plug, etc.)</li>\n<li>Wires/Conductors</li>\n<li>Consumer (e.g. Light bulb, Speaker, Servo, etc.)</li>\n</ol>\n<p>The power source provides the electrical energy required by the consumer by travelling through the wires. For example, the battery in this circuit provides energy to the LED.</p>\n<p>To prevent too much energy from travelling through the circuit to the consumer, we \"limit\" it by using resistors. Introducing Ohm's Law.</p>\n<h2 id=\"mcetoc_1fuihjt2m14d\">Ohm's Law</h2>\n<p>In a basic circuit, there are 3 variables to consider:</p>\n<ol>\n<li>Voltage</li>\n<li>Current</li>\n<li>Resistance</li>\n</ol>\n<p>Voltage is the potential difference measured across the component. For example, the potential difference measured across a typical AA battery is 1.5V. <strong>The unit for voltage is V.</strong></p>\n<p>Current is the rate at which the electricity flows throughout the circuit and is measured in Amperes. <strong>The unit for current is A.</strong></p>\n<p>The resistance resists the flow of electricity, to prevent the consumer from being damaged due to too much current flowing through it. <strong>The unit for resistance is Ω</strong>.</p>\n<p>Here are 2 examples, the one with a resistor to the right, the one without on the left.</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/10/resistorCircuit.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/10/responsive/resistorCircuit-xs.png 300w ,https://knowledge.fourier.industries/media/posts/10/responsive/resistorCircuit-sm.png 480w ,https://knowledge.fourier.industries/media/posts/10/responsive/resistorCircuit-md.png 749w\"  alt=\"\" width=\"425\" height=\"306\"></figure>\n<p>Although the LED on the left is glowing much brighter than the one on the right, its lifespan is significantly reduced due to the excessive current flowing through the LED. If batteries with more voltage were used (e.g. 9-Volt Battery), it would probably cause the LED to be permanently damaged immediately.</p>\n<p>To keep it simple for learning, we have 2 main resistors (330Ω and 10KΩ) provided in the SSTuino Innovator's Kit v2 that would be just nice for the included components.</p>\n<p>Below is a simple example of a circuit with a resistor.</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://cdn.sparkfun.com/assets/6/e/8/3/c/51f93d85757b7f2049270817.png\" data-is-external-image=\"true\"  alt=\"\" width=\"362\" height=\"215\"></figure>\n<p><a href=\"https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-3.html\" class=\"btn btn--outline\">⬅️ Back</a><a style=\"float: right;\" href=\"https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-5.html\" class=\"btn btn--green\">Next ➡️</a></p>\n</div>",
            "author": {
                "name": "FourierIndustries LLP"
            },
            "tags": [
            ],
            "date_published": "2022-03-18T21:41:39+08:00",
            "date_modified": "2022-03-21T13:30:22+08:00"
        },
        {
            "id": "https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-3.html",
            "url": "https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-3.html",
            "title": "Smoke Test",
            "summary": "It is now time to plug in your SSTuino II&hellip;",
            "content_html": "<p>It is now time to plug in your SSTuino II to your Learning Device! Please use the provided USB-C cable and plug it into your Learning Device.</p>\n<p class=\"msg msg--info\"><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\"><strong>Tip: </strong>In the event you see LEDs lighting up when they should not, try to move the device to a more insulated surface (e.g. Plastic table or on the top of the Kit's box). This happens as the components on the Explorer board is quite sensitive, but as long as the board is moved to a more insulated surface it will be good.</span></p>\n<p>The SSTuino should light up as follows:</p>\n<figure class=\"post__video\"><video loading=\"lazy\" width=\"300\" height=\"150\" playsinline=\"\" autoplay=\"autoplay\" muted=\"\" loop=\"loop\" data-mce-fragment=\"1\">\n    <source src=\"media/files/smoketest.mp4\" type=\"video/mp4\" /></video></figure>\n<p><a href=\"https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-2.html\" class=\"btn btn--outline\">⬅️ Back</a><a style=\"float: right;\" href=\"https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-4.html\" class=\"btn btn--green\">Next ➡️</a></p>",
            "author": {
                "name": "FourierIndustries LLP"
            },
            "tags": [
            ],
            "date_published": "2022-03-18T21:40:22+08:00",
            "date_modified": "2022-03-22T15:12:51+08:00"
        },
        {
            "id": "https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-2.html",
            "url": "https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-2.html",
            "title": "Setting up your SSTuino II",
            "summary": "Note: Please do not plug in the SSTuino II and/or&hellip;",
            "content_html": "<p class=\"msg msg--warning\"><strong>Note:</strong> Please do not plug in the SSTuino II and/or its components to your learning device or any power source first. We will get to it very soon. 🙂</p>\n<p>In this tutorial, we will install the required software, boards and libraries. This allows all of your code that you will create in the future to be transferred onto the SSTuino II. The installation process is simple and we will get you started in no time!</p>\n<h2>Download Arduino IDE</h2>\n<p>First, let us download the required software for your learning device. Click on the button below to download Arduino IDE for your Mac.</p>\n<p class=\"align-center\"><a href=\"https://downloads.arduino.cc/arduino-1.8.19-macosx.zip\" class=\"btn\">Download Arduino IDE for Mac</a></p>\n<p>Once the app has been downloaded, drag and drop it into your Applications folder.</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/6/arduino2.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/6/responsive/arduino2-xs.png 300w ,https://knowledge.fourier.industries/media/posts/6/responsive/arduino2-sm.png 480w ,https://knowledge.fourier.industries/media/posts/6/responsive/arduino2-md.png 749w\"  alt=\"\" width=\"555\" height=\"279\"></figure>\n<p>Launch the app. You might notice this pop up appearing on the screen. Click on <span style=\"text-decoration: underline;\">Open</span></p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/6/arduino3.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/6/responsive/arduino3-xs.png 300w ,https://knowledge.fourier.industries/media/posts/6/responsive/arduino3-sm.png 480w ,https://knowledge.fourier.industries/media/posts/6/responsive/arduino3-md.png 749w\"  alt=\"\" width=\"323\" height=\"128\"></figure>\n<p class=\"msg msg--highlight  msg--info\"><strong>Tip</strong>: For those who are not able to install due to parental controls, please ask your parents to authorise the installation.</p>\n<h2>Installing the SSTuino II board type</h2>\n<p>Go to the preferences of the Arduino app</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/6/arduino4.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/6/responsive/arduino4-xs.png 300w ,https://knowledge.fourier.industries/media/posts/6/responsive/arduino4-sm.png 480w ,https://knowledge.fourier.industries/media/posts/6/responsive/arduino4-md.png 749w\"  alt=\"\" width=\"515\" height=\"338\"></figure>Copy this line and paste it into the box circled (\"Additional Boards Manager URLs\"):</p>\n<div class=\"language-text highlighter-rouge\">\n<div class=\"highlight\">\n<pre class=\"highlight\"><code class=\"language-http codenobreak\">https://fourierindustries-llp.github.io/SSTuino_II_Core/package_FourierIndustries-LLP_SSTuino_II_Core_index.json\n</code></pre>\n</div>\n</div>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/6/arduino5.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/6/responsive/arduino5-xs.png 300w ,https://knowledge.fourier.industries/media/posts/6/responsive/arduino5-sm.png 480w ,https://knowledge.fourier.industries/media/posts/6/responsive/arduino5-md.png 749w\"  alt=\"\" width=\"564\" height=\"392\"></figure>Click <a href=\"#\" class=\"btn btn--white btn--outline\">OK</a> after you have completed pasting the address.</p>\n<p>Next, go to <code>Tools &gt; Board &gt; Boards Manager</code></p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/6/arduino6.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/6/responsive/arduino6-xs.png 300w ,https://knowledge.fourier.industries/media/posts/6/responsive/arduino6-sm.png 480w ,https://knowledge.fourier.industries/media/posts/6/responsive/arduino6-md.png 749w\"  alt=\"\" width=\"537\" height=\"302\"></figure>\n<p>Type in <code>SSTuino</code> into the search bar and click on install.</p>\n<h2><figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/6/arduino7.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/6/responsive/arduino7-xs.png 300w ,https://knowledge.fourier.industries/media/posts/6/responsive/arduino7-sm.png 480w ,https://knowledge.fourier.industries/media/posts/6/responsive/arduino7-md.png 749w\"  alt=\"\" width=\"553\" height=\"311\"></figure></h2>\n<h2>Done!</h2>\n<p>That's all you have to do to install the SSTuino II to your Learning Device.</p>\n<p><a href=\"https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list.html\" class=\"btn btn--outline\">⬅️ Back</a><a style=\"float: right;\" href=\"https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-3.html\" class=\"btn btn--green\">Next ➡️</a></p>",
            "author": {
                "name": "FourierIndustries LLP"
            },
            "tags": [
            ],
            "date_published": "2022-03-18T18:36:30+08:00",
            "date_modified": "2022-03-21T13:31:21+08:00"
        },
        {
            "id": "https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list.html",
            "url": "https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list.html",
            "title": "SSTuino Innovator&#x27;s Kit v2 Parts List",
            "summary": "Note: Please do not plug in the SSTuino II and/or&hellip;",
            "content_html": "<p class=\"msg msg--warning\"><strong>Note:</strong> Please do not plug in the SSTuino II and/or its components to your learning device or any power source first. We will get to it very soon. 🙂</p>\n<p>Upon receiving your SSTuino Innovator's Kit v2, please ensure that all the components are present as stated below:</p>\n<div><figure class=\"post__image post__image--wide\"><img loading=\"lazy\"  src=\"https://knowledge.fourier.industries/media/posts/5//partslist.png\" sizes=\"(max-width: 749px) 100vw, 749px\" srcset=\"https://knowledge.fourier.industries/media/posts/5//responsive/partslist-xs.png 300w ,https://knowledge.fourier.industries/media/posts/5//responsive/partslist-sm.png 480w ,https://knowledge.fourier.industries/media/posts/5//responsive/partslist-md.png 749w\"  alt=\"\" width=\"1440\" height=\"810\"></figure></div>\n<table class=\"table-bordered table-striped\" style=\"border-collapse: collapse; width: 100%; height: 856.11px;\" border=\"1\">\n<tbody>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\"><strong>No.</strong></td>\n<td style=\"width: 67.6047%; height: 50.3594px;\"><strong>Component Name</strong></td>\n<td style=\"width: 23.4082%; height: 50.3594px;\"><strong>Quantity</strong></td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">1</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">SSTuino II</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">1</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">2</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">Explorer Board</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">1</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">3</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">USB-C Cable</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">1</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">4</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">Breadboard</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">1</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">5</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">Dupont cables (wires) (M-M), (M-F)</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">1 Each</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">6</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">Assortment of LEDs</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">1 Bag</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">7</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">Buzzer</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">1</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">8</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">Push Button</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">2</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">9</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">Potentiometer (10kΩ)</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">1</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">10</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">Light Dependant Resistor</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">1</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">11</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">Temperature Sensor (TMP36)</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">1</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">12</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">Ultrasonic Distance Sensor</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">1</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">13</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">Passive Infrared (PIR) Motion Sensor</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">1</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">14</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">Servo</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">1</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">15</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">RGB LED (Common cathode)</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">1</td>\n</tr>\n<tr style=\"height: 50.3594px;\">\n<td style=\"width: 8.98716%; height: 50.3594px;\">16</td>\n<td style=\"width: 67.6047%; height: 50.3594px;\">330Ω and 10kΩ resistor reel</td>\n<td style=\"width: 23.4082%; height: 50.3594px;\">1 Bag</td>\n</tr>\n</tbody>\n</table>\n<h2>Installation of prerequisites</h2>\n<p>Next, we will be installing the required software onto your Learning Device.</p>\n<p><a href=\"https://knowledge.fourier.industries/sstuino-ii-essentials-track.html\" class=\"btn btn--outline\">⬅️ Back</a><a style=\"float: right;\" href=\"https://knowledge.fourier.industries/sstuino-innovators-kit-v2-parts-list-2.html\" class=\"btn btn--green\">Next ➡️</a></p>",
            "author": {
                "name": "FourierIndustries LLP"
            },
            "tags": [
            ],
            "date_published": "2022-03-18T16:27:09+08:00",
            "date_modified": "2022-03-18T19:52:25+08:00"
        }
    ]
}
